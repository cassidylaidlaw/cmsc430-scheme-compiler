(let ([f (lambda (p) (guard (x [(cons? x) '0] [else (+ x '1)])
                            (let ([n (let/cc x x)])
                              (if (and (cons? n) (< (car n) '0))
                                  (raise '11)
                                  (+ '1 (guard (guard [(cons? guard) (car guard)])
                                               (if (cons? p)
                                                   (raise (let ([raise (lambda (x) x)]) (raise p)))
                                                   (if (cons? n)
                                                       (raise (car n))
                                                       (raise (n (list (- p '5))))))))))))])
  (map f (list (cons '5 '()) '3 '0 '11 '7 '-1)))